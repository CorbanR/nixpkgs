name: 'Nixpkgs'
on:
  pull_request:
    branches-ignore:
      - 'gh-pages'
      - 'cf-worker'
  push:
    branches-ignore:
      - 'gh-pages'
      - 'cf-worker'
  workflow_dispatch:
    branches-ignore:
      - 'gh-pages'
      - 'cf-worker'
    inputs:
      deploy:
        description: 'Deploy: [true, false]'
        required: true
        default: 'false'

jobs:
  tests-and-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11.0]
    steps:
      # v2.3.4
    - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

      # v13
    - uses: cachix/install-nix-action@8d6d5e949675fbadb765c6b1a975047fa5f09b27
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes

    - name: Print nix.conf
      run: cat /etc/nix/nix.conf

    - name: Build tests
      run: nix-build tests.nix

    - name: Cleanup test results
      run: rm -rf results*

    - name: Create output path
      if: (github.event_name == 'push' || github.event.inputs.deploy == 'true') && github.ref == 'refs/heads/master'
      run: mkdir -p _output/cache

      # We only need to do this particular step once
    - name: Create channel archive
      if: startsWith(matrix.os,'ubuntu') && (github.event_name == 'push' || github.event.inputs.deploy == 'true') && github.ref == 'refs/heads/master'
      run: |
        tar -cJf "_output/nixexprs.tar.xz" ./*.nix pkgs/ maintainers/ \
            --transform "s,^,${PWD##*/}/," \
            --owner=0 --group=0 --mtime="1970-01-01 00:00:00 UTC"

        touch "_output/index.html"
        printf 'https://nixpkgs.raunco.co/cache' > "_output/binary-cache-url"

    - name: Build the packages
      if: (github.event_name == 'push' || github.event.inputs.deploy == 'true') && github.ref == 'refs/heads/master'
      run: nix-build

    - name: Remove graalvm packages from cache, as they are already compiled binaries
      if: (github.event_name == 'push' || github.event.inputs.deploy == 'true') && github.ref == 'refs/heads/master'
      run: |
        nix-store --delete /nix/store/*graalvm-ce* || true
        nix-store --delete /nix/store/*installable*java* || true

    - name: optimize nix-store to reduce size
      if: (github.event_name == 'push' || github.event.inputs.deploy == 'true') && github.ref == 'refs/heads/master'
      run: nix-store --optimise

    - name: Sign the packages
      if: (github.event_name == 'push' || github.event.inputs.deploy == 'true') && github.ref == 'refs/heads/master'
      run: |
        export NIX_SECRET_KEY_FILE="$PWD/nix-cache-priv-key.pem"
        echo "$NIX_SECRET_KEY" > "$NIX_SECRET_KEY_FILE"
        nix sign-paths -k "$NIX_SECRET_KEY_FILE"
        rm -rf "$NIX_SECRET_KEY_FILE"
      env:
        NIX_SECRET_KEY: ${{ secrets.NIX_SECRET_KEY }}

    - name: nix copy to file
      run: |
        nix copy --to "file:///$PWD/_output/cache?compression=xz"

      # For some reason this command is failing.
      # https://github.com/cachix/install-nix-action/issues/60
    - name: nix path-info
      run: |
        nix path-info --store "file:///$PWD/_output/cache" --json | json_pp || true

      #v2.2.2
    - name: Upload artifacts
      if: (github.event_name == 'push' || github.event.inputs.deploy == 'true') && github.ref == 'refs/heads/master'
      uses: actions/upload-artifact@27121b0bdffd731efa15d66772be8dc71245d074
      with:
        name: nix-cache-${{ matrix.os }}-${{ github.sha }}
        path: _output

  deploy:
    needs: "tests-and-build"
    if: (github.event_name == 'push' || github.event.inputs.deploy == 'true') && github.ref == 'refs/heads/master'
    runs-on: ubuntu-20.04
    steps:
      # v2.3.4
    - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

    - name: Cleanup tasks
      run: |
        sudo apt clean
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      #v2.0.8
    - name: Download linux artifacts
      uses: actions/download-artifact@3be87be14a055c47b01d3bd88f8fe02320a9bb60
      with:
        name: nix-cache-ubuntu-20.04-${{ github.sha }}
        path: nix-cache-ubuntu-20.04-${{ github.sha }}

      #v2.0.8
    - name: Download mac artifacts
      uses: actions/download-artifact@3be87be14a055c47b01d3bd88f8fe02320a9bb60
      with:
        name: nix-cache-macos-11.0-${{ github.sha }}
        path: nix-cache-macos-11.0-${{ github.sha }}

    - name: Combine cache files
      run: |
        mkdir -p _output
        cp -r nix-cache-macos-11.0-${GITHUB_SHA}/. _output
        rm -rf nix-cache-macos-11.0-${GITHUB_SHA}/
        cp -r nix-cache-ubuntu-20.04-${GITHUB_SHA}/. _output
        rm -rf nix-cache-ubuntu-20.04-${GITHUB_SHA}/
        ls -lart -hu _output/
        du -hc _output/

      #v4
    - name: Deploy pages
      uses: JamesIves/github-pages-deploy-action@0f24da7de3e7e135102609a4c9633b025be8411b
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        ssh-key: ${{ secrets.DEPLOY_KEY }}
        branch: gh-pages
        folder: _output
        clean: true
        clean-exclude: |
          .gitattributes
          CNAME
      env:
        GIT_TRACE_PACKET: 1
        GIT_TRACE: 1
        GIT_CURL_VERBOSE: 1
        GIT_CONFIG_COUNT: 1
        GIT_CONFIG_KEY_0: "http.postBuffer"
        GIT_CONFIG_VALUE_0: "524288000"

  test-channel:
    needs: "deploy"
    if: (github.event_name == 'push' || github.event.inputs.deploy == 'true') && github.ref == 'refs/heads/master'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11.0]
    steps:
      # v2.3.4
    - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

      # v13
    - uses: cachix/install-nix-action@8d6d5e949675fbadb765c6b1a975047fa5f09b27
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes

    - name: Print nix.conf
      run: cat /etc/nix/nix.conf

    - name: Add channel
      run: |
        nix-channel --add https://nixpkgs.raunco.co/ raunco
        nix-channel --update
        nix-channel --list

    - name: Add cache to users nix config
      run: |
        mkdir  -p ~/.config/nix
        cat <<EOT >> ~/.config/nix/nix.conf
        substituters = https://cache.nixos.org https://nixpkgs.raunco.co/cache
        trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nixpkgs.raunco.co:bb6Y8BB7fkbRlhaUFzbubClYT5OlHyqEmCG8uh9Kt2U=
        EOT
        cat ~/.config/nix/nix.conf

      # nix-shell -E 'with import <nixpkgs> { }; with import <raunco> {}; runCommand"dummy" { buildInputs = [ vaulted nodejs-8_x rapture ]; } ""'
    - name: Install some packages defined in raunco channel
      run: |
        nix-env -iA raunco.vaulted
        nix-env -iA raunco.rapture

    - name: Check that packages were actually installed
      run: |
        rapture version
        vaulted --version
        node --version
