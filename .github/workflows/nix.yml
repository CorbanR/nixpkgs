name: "Nixpkgs"
on:
  pull_request:
    branches-ignore:
      - "gh-pages"
      - "cf-worker"
  push:
    branches-ignore:
      - "gh-pages"
      - "cf-worker"

# See nix.yml.bak for how I would like this to work..
jobs:
  tests-and-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-10.15]
    steps:
      # v2.1.0
    - uses: actions/checkout@86f86b36ef

      # v8
    - uses: cachix/install-nix-action@ebed63b0a2

    - name: Print nix.conf
      run: cat /etc/nix/nix.conf

    - name: Build tests
      run: nix-build --max-jobs 2 --cores 2 tests.nix

    - name: Cleanup test results
      run: rm -rf results*

      # The below steps should be in a sepearate job, but cannot get cache plugin working on /nix/store
      # see nix.yml.bak
    - name: Create output path
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: mkdir -p _output/cache

      # We only need to do this particular step once
    - name: Create channel archive
      if: startsWith(matrix.os,'ubuntu') && success()
      run: |
        tar -cJf "_output/nixexprs.tar.xz" ./*.nix pkgs/ maintainers/ \
            --transform "s,^,${PWD##*/}/," \
            --owner=0 --group=0 --mtime="1970-01-01 00:00:00 UTC"

        touch "_output/index.html"
        printf 'https://nixpkgs.raunco.co/cache' > "_output/binary-cache-url"

    - name: Build the packages
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: nix-build --max-jobs 2 --cores 2

    - name: optimize nix-store to reduce size
      if: success()
      run: nix-store --optimise

    - name: Sign the packages
      if: success()
      run: |
        export NIX_SECRET_KEY_FILE="$PWD/nix-cache-priv-key.pem"
        echo "$NIX_SECRET_KEY" > "$NIX_SECRET_KEY_FILE"
        nix sign-paths -k "$NIX_SECRET_KEY_FILE"
        nix copy --to "file:///$PWD/_output/cache?compression=xz"
        nix path-info --store "file:///$PWD/_output/cache" --json | json_pp
        rm -rf "$NIX_SECRET_KEY_FILE"
      env:
        NIX_SECRET_KEY: ${{ secrets.NIX_SECRET_KEY }}

    - name: Upload artifacts
      if: success()
      uses: actions/upload-artifact@97b7dace6c
      with:
        name: nix-cache-${{ matrix.os }}-${{ github.sha }}
        path: _output

  deploy:
    needs: "tests-and-build"
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-18.04
    steps:
      # v2.1.0
    - uses: actions/checkout@86f86b36ef
      with:
        persist-credentials: false

    - name: Download linux artifacts
      uses: actions/download-artifact@1de1dea89c
      with:
        name: nix-cache-ubuntu-18.04-${{ github.sha }}

    - name: Download mac artifacts
      uses: actions/download-artifact@1de1dea89c
      with:
        name: nix-cache-macos-10.15-${{ github.sha }}

    - name: Combine cache files
      run: |
        mkdir -p _output
        cp -r nix-cache-macos-10.15-${GITHUB_SHA}/. _output
        cp -r nix-cache-ubuntu-18.04-${GITHUB_SHA}/. _output

    #- name: Upload combined artifacts
      #uses: actions/upload-artifact@v1
      #with:
        #name: nix-cache-combined-${{ github.sha }}
        #path: _output

      #v0.2.0
    - name: Install SSH Client ðŸ”‘
      uses: webfactory/ssh-agent@4fcb25e7ef
      with:
        ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

      #v3
    - name: Deploy pages
      uses: JamesIves/github-pages-deploy-action@d2f2f7fe9b
      with:
        SSH: true
        BRANCH: gh-pages
        FOLDER: _output
        CLEAN: false
        CLEAN_EXCLUDE: '[".gitattributes", ".gitignore", "CNAME"]'

  test-channel:
    needs: "deploy"
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-10.15]
    steps:
      # v2.1.0
    - uses: actions/checkout@86f86b36ef

      # v8
    - uses: cachix/install-nix-action@ebed63b0a2

    - name: Print nix.conf
      run: cat /etc/nix/nix.conf

    - name: Add channel
      run: |
        nix-channel --add https://nixpkgs.raunco.co/ raunco
        nix-channel --update
        nix-channel --list

    - name: Add cache to users nix config
      run: |
        mkdir  -p ~/.config/nix
        cat <<EOT >> ~/.config/nix/nix.conf
        substituters = https://cache.nixos.org https://nixpkgs.raunco.co/cache
        trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nixpkgs.raunco.co:bb6Y8BB7fkbRlhaUFzbubClYT5OlHyqEmCG8uh9Kt2U=
        EOT
        cat ~/.config/nix/nix.conf

    - name: Install some packages defined in raunco channel
      run: |
        nix-env -iA raunco.nodejs-8_x
        nix-env -iA raunco.vaulted
        nix-env -iA raunco.rapture
